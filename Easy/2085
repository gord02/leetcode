class Solution {
public:
    // 2085. Count Common Words With One Occurrence
//     time taken: 15 minutes, 7 minutes for idea and planning
    // Runtime: 44 ms, faster than 76.50% of C++ online submissions for Count Common Words With One Occurrence.
// Memory Usage: 18.9 MB, less than 56.37% of C++ online submissions for Count Common Words With One Occurrence.
    int countWords(vector<string>& words1, vector<string>& words2) {
        int count = 0;
//         map for word 1
        map<string, int> map1;
         // /loop through words in words1 and get counts of occurences
        for(string word: words1) {
            auto it = map1.find(word);
            if(it == map1.end()) {
                map1.insert(pair<string, int> (word, 1));
            }else{
                it->second++;
            }
        }
//         map for word 2
        map<string, int> map2;      
         // /loop through words in words2 and get counts of occurences
        
        for(string word: words2) {
            auto it = map2.find(word);
            if(it == map2.end()) {
                map2.insert(pair<string, int> (word, 1));
            }else{
                it->second++;
            }
        }
        
//         loop through words1 map and comapre to words2 map
//             
        map<string, int>::iterator it = map1.begin();
        
        while(it != map1.end()) {
             // if pair in map 1 has count of 1, check in map2 if count of 1, if so incrment value of our final results
            if(it->second == 1) {
                auto find = map2.find(it->first);
                if(find!= map2.end() && find->second == 1) {
                    count++;
                }
            }
            it++;
        }
        
        return count;
        
    }
};