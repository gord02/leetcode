
// 830. Positions of Large Groups
// 8 minutes
// Runtime: 6 ms, faster than 49.16% of C++ online submissions for Positions of Large Groups.
// Memory Usage: 7.4 MB, less than 58.28% of C++ online submissions for Positions of Large Groups.
class Solution{
    public:
      vector<vector<int>> largeGroupPositions(string s) {
          vector<vector<int>> res;
          int i=0;
          while(i < s.size()) {
              int start = i;
              while(i+1 < s.size() && s[i] == s[i+1]) {
                  i++;
              }
              if(i-start + 1 >=3) {
                  res.push_back({start, i});
              }
              i++;
          }
          return res;
      }
};


class Solution {
public:
    // 830. Positions of Large Groups
//     time taken: 13 minutes
//     Runtime: 0 ms, faster than 100.00% of C++ online submissions for Positions of Large Groups.
// Memory Usage: 7.2 MB, less than 83.03% of C++ online submissions for Positions of Large Groups.
    vector<vector<int>> largeGroupPositions(string s) {
        vector<vector<int>> res;
        for(int start=0; start<s.length(); start++) {
            int end = start;
            while(end < s.length() && s[end] == s[start]) {
                end++;
            }
            if(end - start >=3) {
                res.push_back({start, end-1});
            }
            start = end-1;
        }
        return res;
    }
};