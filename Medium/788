class Solution {
public:
// 788. Rotated Digits
// // time: 15 minutes 
// Runtime
// 64 ms
// Beats
// 11.81%
// Memory
// 16.3 MB
// Beats
// 5.48%
    int rotatedDigits(int n) {
        int count = 0;
        for(int i=2; i<=n; i++) {
            vector<int> nums(10, 0);
            string str = to_string(i);
            for(char c: str) {
                nums[c-'0']++;
            }

            // if we only have 1s zeroes or 8s then any perumation of these numbers when flipped 180 will remain the same, dont increemnt count, else, increment count

            // if dont have 3,4,7
            if(nums[3] != 0 || nums[4] != 0 || nums[7] != 0) {
                // dont bother looping through array, cant form good number
                continue;
            }
            
            if(nums[2] != 0 || nums[5] != 0 || nums[6] != 0 || nums[9] != 0) {
                count++;
            }
        }
        return count;
    }
};

class Solution {
public:
    // 788. Rotated Digits
//     Time taken: 16 minutes
//     Runtime: 32 ms, faster than 23.15% of C++ online submissions for Rotated Digits.
// Memory Usage: 6 MB, less than 35.61% of C++ online submissions for Rotated Digits.
    int rotatedDigits(int n) {
        int count=0;
        for(int i=1; i<=n; i++) {
            // cout << "i: " << i << endl;
            string s = to_string(i);
            bool invalid = false;
            for(char c: s) {
                if(c == '3' || c== '4' || c == '7') {
                    invalid = true;
                    break;
                }
            }
            if(invalid) {
                continue;
            }
            for(char &c: s) {
                switch(c) {
                case '2':
                        c = '5';
                        break;
                case '5':
                        c = '2';
                        break;
                case '6':
                        c = '9';
                        break;
                case '9':
                        c = '6';
                        break;
                }
            }
            // cout << "s: " << s << endl;
            if(stoi(s) == i) {
                continue;
            }else{
                count++;
            }
        }
        return count;
    }
};