class Solution {
public:
    // 103. Binary Tree Zigzag Level Order Traversal
//     15 minutes
//     be more through with testing and exmaples before running, started coding then realized soluition was flawed
    // Runtime: 3 ms, faster than 83.35% of C++ online submissions for Binary Tree Zigzag Level Order Traversal.
// Memory Usage: 12.2 MB, less than 43.09% of C++ online submissions for Binary Tree Zigzag Level Order Traversal.
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int>> res;
        if(root == nullptr) {
            return res;
        }
        q.push(root);
        // int lvl = 0;
        while(q.empty() == false) {
            vector<int> nodes;
            // lvl++;
            int size = q.size();
            while(size > 0) {
                size--;
                TreeNode* node = q.front();
                q.pop();
                
                nodes.push_back(node->val);
    
                if(node->left != nullptr) {
                    q.push(node->left);
                }
                if(node->right != nullptr) {
                    q.push(node->right);
                }
            }
            res.push_back(nodes);
        }
        for(int i=0; i< res.size(); i++) {
            if(i%2 != 0) {
                reverse(res[i].begin(), res[i].end());
            }
        }
        return res;
    }
};