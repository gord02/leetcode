class Solution {
public:
    // 833. Find And Replace in String
//     time taken: roughly 45 minutes
//     Runtime: 7 ms, faster than 58.74% of C++ online submissions for Find And Replace in String.
// Memory Usage: 13.2 MB, less than 26.64% of C++ online submissions for Find And Replace in String.
    string findReplaceString(string s, vector<int>& indices, vector<string>& sources, vector<string>& targets) {
        map<int, vector<string> > dict;
        for(int i=0; i<indices.size(); i++) {
            dict.insert(pair<int, vector<string>>(indices[i], {sources[i], targets[i]}));// no overlapping replacments so this is fine
        }
        string new_s = "";
        sort(indices.begin(), indices.end());
        // for(int i=0; i<indices.size(); i++) {
        for(int i=0; i<s.length(); i++) {
            // cout << "i: " << i <<  " "<<s[i] << endl;
             if(dict.find(i) == dict.end()) {
                 new_s += s[i];
             }else{
                auto it = dict.find(i);
                string neededWord = it->second[0];
                string replacment = it->second[1];
                // cout << neededWord << endl;
                if(i+ neededWord.length() >s.length()) {
                    new_s += s[i];
                }else{
                    if(s.substr(i, neededWord.length()) != neededWord) {
                      new_s += s[i];
                    }else{
                         new_s = new_s + replacment;
                        i = i+neededWord.length()-1;
                    }
                }
            }
        }
        return new_s;
    }
};