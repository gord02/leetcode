 // 677. Map Sum Pairs
    // Time taken: 13 minutes
//     Runtime: 0 ms, faster than 100.00% of C++ online submissions for Map Sum Pairs.
// Memory Usage: 7.8 MB, less than 94.97% of C++ online submissions for Map Sum Pairs.

    map<string, int>dict;
    MapSum() {
        
    }
    
    void insert(string key, int val) {
        auto it = this->dict.find(key);
        if(it == dict.end()) {
            this->dict.insert(pair<string, int> (key, val));
        }else{
            it->second = val;
        }
    }
    
    int sum(string prefix) {
        int sum = 0;
        map<string, int>::iterator it = this->dict.begin();
        while( it != dict.end()) {
            // int true
            for(int i =0; i<prefix.size(); i++) {
                if(i== prefix.size()-1 && prefix[i] == it->first[i]) {
                    sum = sum + it->second;
                }
                if(prefix[i] != it->first[i]) {
                    break;
                }
            }
            it++;
        }
        return sum;
    }