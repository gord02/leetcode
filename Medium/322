class Solution {
public:
     int topDown(vector<int>& coins, int amount, vector<int> &dp) {
        if(dp[amount] != -1) {
            return dp[amount];
        }

        int res = INT_MAX-1;
        for(int i=0; i<coins.size(); i++) {
            if(coins[i] <= amount) {
//                 the plus one represntes the addtion of the current coin we are subtracing from here
            res = min(res, topDown(coins, amount-coins[i], dp) + 1);
            }
        }
        dp[amount] = res;
        return res;
    }
    
    int coinChange(vector<int>& coins, int amount) {
        vector<int> dp(amount+1, -1);
        dp[0] = 0;
        int res = topDown(coins, amount, dp);
        if(res == INT_MAX-1 || res == INT_MAX) {
           return -1;
        }
       return res;
    }
};