class Solution {
public:
    // 2342. Max Sum of a Pair With Equal Sum of Digits
//     time taken: 15 minutes 
    // Runtime: 692 ms, faster than 9.15% of C++ online submissions for Max Sum of a Pair With Equal Sum of Digits.
// Memory Usage: 68.1 MB, less than 49.20% of C++ online submissions for Max Sum of a Pair With Equal Sum of Digits.
    int maximumSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        map<int, vector<int>> dict;
        
        int best = -1;
        for(int i=0; i< nums.size(); i++) {
            int digits = 0;
            int j = 0;
            string s = to_string(nums[i]);
            while( j < s.size()) {
                digits += (s[j] - '0');
                j++;
            }

            auto it = dict.find(digits);
            if(it != dict.end() && it->second.size() > 0) {
                int num = it->second.back();
                int sum = num + nums[i];
                
                best = max(best, sum);
            }
            
            if(it == dict.end()) {
                dict.insert( make_pair(digits, {nums[i]} ) );
                
                dict.insert(pair<int, vector<int>> (digits, {nums[i]}));
            }else{
                it->second.push_back(nums[i]);
            }
        }
        return best;
    }
};
