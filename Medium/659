
class Solution{
    public:
    // 659. Split Array into Consecutive Subsequences
//     time taken: 26 minutes, work some varriables wrong
    // Runtime: 671 ms, faster than 5.07% of C++ online submissions for Split Array into Consecutive Subsequences.
// Memory Usage: 64.2 MB, less than 14.05% of C++ online submissions for Split Array into Consecutive Subsequences.
       bool isPossible(vector<int>& nums) {
           vector<vector<int>> seq;
           seq.push_back({nums[0], 1});
           for(int i=1; i< nums.size(); i++) {
                bool placed = false;
               for(int j = seq.size()-1; j>=0; j--) {
                   if(nums[i] == seq[j][0] + 1) {
                       seq[j][0] = nums[i];
                       seq[j][1]++;
                       placed = true;
                       break;
                   }
               }
               if(!placed) {
                    seq.push_back({nums[i], 1});
               }
           }
        for(int j = seq.size()-1; j>=0; j--) {
          if(seq[j][1] < 3) {
              return false;
          }
        }
           
           return true;
       }
};