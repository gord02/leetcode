
class Solution {
public:
//     2. Add Two Numbers
//     time taken: 21 minutes 
    // Runtime: 48 ms, faster than 69.80% of C++ online submissions for Add Two Numbers.
// Memory Usage: 71.5 MB, less than 51.41% of C++ online submissions for Add Two Numbers.
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* dummyHead = new ListNode();
        ListNode* head = dummyHead;
        int carry = 0;
        while(l1!= nullptr && l2!= nullptr) {
            int sum = l1->val + l2->val + carry;
            if(sum > 9) {
                carry = 1;
                sum-=10;
            }else{
                carry = 0;
            }
            
            ListNode* newNode = new ListNode(sum);
            head->next = newNode;
            head = head->next;
            
            l1 = l1->next;
            l2 = l2->next;
        }
         while(l1!= nullptr) {
            int sum = l1->val + carry;
            if(sum > 9) {
                carry = 1;
                sum-=10;
            }else{
                carry = 0;
            }
            ListNode* newNode = new ListNode(sum);
            head->next = newNode;
            head = head->next;
            
            l1 = l1->next;
         }
         while(l2!= nullptr) {
             int sum = l2->val + carry;
            if(sum > 9) {
                carry = 1;
                sum-=10;
            }else{
                carry = 0;
            }
            ListNode* newNode = new ListNode(sum);
            head->next = newNode;
            head = head->next;
            
            l2 = l2->next;
         }
        
        if(carry != 0) {
             ListNode* newNode = new ListNode(carry);
            head->next = newNode;
            head = head->next;
        }
        return dummyHead->next;
    }
};