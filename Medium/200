class Solution {
public:
//     200. Number of Islands
// time taken: 14 minutes to implement
//     Runtime: 117 ms, faster than 8.20% of C++ online submissions for Number of Islands.
// Memory Usage: 31 MB, less than 5.05% of C++ online submissions for Number of Islands.
    map<pair<int, int>, int> dict;
    void df(int i, int j, vector<vector<char>>& grid){
//         undefined base case, went past gird bounds
        if(i<0|| j< 0 || i>=grid.size() || j>= grid[0].size()) {
            return;
        }
        if(dict.find(pair<int, int>(i, j)) != dict.end() || grid[i][j] == '0') {
            return;
        }
      dict.insert(pair<pair<int, int>, int> (make_pair(i, j), 1));
         grid[i][j] = '1';
        df(i+1, j, grid);
        df(i-1, j, grid);
        df(i, j+1, grid);
        df(i, j-1, grid);
        
    }
    int numIslands(vector<vector<char>>& grid) {
        int count = 0;
        for(int i=0; i<grid.size(); i++) {
            for(int j=0; j<grid[i].size(); j++) {
                if(grid[i][j] == '1' && dict.find(pair<int, int>(i, j)) == dict.end()) {
                    df(i , j, grid);
                    count++;
                }
            }
        }
        return count;
    }
};